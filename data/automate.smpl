include: __CURR_CONFIG__, __LOG__, __IMPORT__, __BUILD__

func confirm_settings()
  # Displays user settings and prompts whether changes should be made
  println("\nSchedule options:")
  option: input_int("1-Dynamic 2-Compact 3-Default> ")
  set_schedule(option)
  file_name: "data/"
  input: ""
  str: input_word("Upload prior schedule(y/n) ")
  if(str.==("y"))
    input: input_word("Jbin filename> ")
    file_name.concat(input)
    import_schedule(file_name)

func task_mod(my_task)
  # Adds a checklist or label to the task
  str: input_word("Add a Checklist(y/n) ")
  my_cl: ""
  if(str.==("y"))
    # my_cl: create_checklist(1)
      my_task.add(my_cl)
  str: input_word("Add a Label(y/n) ")
  idx: ""
  if(str.==("y"))
    display_labels()
    idx: input_int("Enter id for label> ")
    my_task.add(get_label(idx))

func setup_tasks()
  # Adds a set of tasks to the system to be scheduled
  str: input_word("Create a Task(y/n) ")
  if(str.!=("y"))
    return
  name: input_word("Name> ")
  hours: input_int("Hours> ")
  due_date: input_int("Due_Date> ")
  t1: task(name, hours, due_date)
  x: input_word("Add a Checklist or Label(y/n) ")
  if(x.==("y"))
    task_mod(t1)
  setup_tasks()

confirm_settings()
setup_tasks()

inject_code()
add_all_tasks()
view_interface()
build()

google_export()