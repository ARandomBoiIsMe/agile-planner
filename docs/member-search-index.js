memberSearchIndex = [{"p":"agile.planner.task","c":"Task","l":"addSubTask(int, boolean)","url":"addSubTask(int,boolean)"},{"p":"agile.planner.manager.day","c":"Day","l":"addSubTask(Task)","url":"addSubTask(agile.planner.task.Task)"},{"p":"agile.planner.manager.day","c":"Day","l":"addSubTaskManually(Task, int)","url":"addSubTaskManually(agile.planner.task.Task,int)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"addTask(String, int, int)","url":"addTask(java.lang.String,int,int)"},{"p":"agile.planner.util","c":"GoogleUtil","l":"authenticate()"},{"p":"agile.planner.util","c":"GoogleUtil","l":"checkConnection()"},{"p":"agile.planner.task","c":"Task.SubTask","l":"compareTo(Task.SubTask)","url":"compareTo(agile.planner.task.Task.SubTask)"},{"p":"agile.planner.task","c":"Task","l":"compareTo(Task)","url":"compareTo(agile.planner.task.Task)"},{"p":"agile.planner.manager.day","c":"Day","l":"Day(int, int, int)","url":"%3Cinit%3E(int,int,int)"},{"p":"agile.planner.util","c":"Time","l":"determineRangeOfDays(Calendar, Calendar)","url":"determineRangeOfDays(java.util.Calendar,java.util.Calendar)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"editTask(int, int, int, int)","url":"editTask(int,int,int,int)"},{"p":"agile.planner.ui","c":"SimpleUI","l":"execute()"},{"p":"agile.planner.util","c":"GoogleUtil","l":"formConnection()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"generateSchedule()"},{"p":"agile.planner.task","c":"Task","l":"getAverageNumHours()"},{"p":"agile.planner.manager.day","c":"Day","l":"getCapacity()"},{"p":"agile.planner.util","c":"CommandManual","l":"getCommandManual()"},{"p":"agile.planner.manager.day","c":"Day","l":"getDate()"},{"p":"agile.planner.task","c":"Task","l":"getDueDate()"},{"p":"agile.planner.util","c":"EventLog","l":"getEventLog(boolean)"},{"p":"agile.planner.util","c":"Time","l":"getFormattedCalendarInstance(int)"},{"p":"agile.planner.manager.day","c":"Day","l":"getHoursFilled()"},{"p":"agile.planner.manager.day","c":"Day","l":"getId()"},{"p":"agile.planner.task","c":"Task","l":"getId()"},{"p":"agile.planner.task","c":"Task","l":"getName()"},{"p":"agile.planner.manager.day","c":"Day","l":"getNumSubTasks()"},{"p":"agile.planner.task","c":"Task.SubTask","l":"getOverflowStatus()"},{"p":"agile.planner.task","c":"Task.SubTask","l":"getParentTask()"},{"p":"agile.planner.manager.day","c":"Day","l":"getParentTask(int)"},{"p":"agile.planner.ui","c":"SimpleUI","l":"getSingleton()"},{"p":"agile.planner.util","c":"CommandManual","l":"getSingleton()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"getSingleton(String, boolean)","url":"getSingleton(java.lang.String,boolean)"},{"p":"agile.planner.manager.day","c":"Day","l":"getSpareHours()"},{"p":"agile.planner.task","c":"Task.SubTask","l":"getSubTaskHours()"},{"p":"agile.planner.task","c":"Task","l":"getSubTotalHoursRemaining()"},{"p":"agile.planner.task","c":"Task","l":"getTotalHours()"},{"p":"agile.planner.io","c":"GoogleProcessing","l":"GoogleProcessing()","url":"%3Cinit%3E()"},{"p":"agile.planner.util","c":"GoogleUtil","l":"GoogleUtil()","url":"%3Cinit%3E()"},{"p":"agile.planner.manager.day","c":"Day","l":"hasSpareHours()"},{"p":"agile.planner.util","c":"GoogleUtil","l":"initGoogleIO()"},{"p":"agile.planner.io","c":"IOProcessing","l":"IOProcessing()","url":"%3Cinit%3E()"},{"p":"agile.planner.ui","c":"SimpleUI","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"outputCurrentDayToConsole()"},{"p":"agile.planner.ui","c":"SimpleUI","l":"outputHeader()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"outputScheduleToConsole()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"outputScheduleToFile(String)","url":"outputScheduleToFile(java.lang.String)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"processTasks(String)","url":"processTasks(java.lang.String)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"quit()"},{"p":"agile.planner.io","c":"IOProcessing","l":"readCfg(String)","url":"readCfg(java.lang.String)"},{"p":"agile.planner.io","c":"IOProcessing","l":"readTasks(String, PriorityQueue<Task>, int)","url":"readTasks(java.lang.String,java.util.PriorityQueue,int)"},{"p":"agile.planner.util","c":"GoogleUtil","l":"receiveData()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"removeTask(int, int)","url":"removeTask(int,int)"},{"p":"agile.planner.util","c":"EventLog","l":"reportDayAction(Day, Task, boolean)","url":"reportDayAction(agile.planner.manager.day.Day,agile.planner.task.Task,boolean)"},{"p":"agile.planner.util","c":"EventLog","l":"reportDisplayDaySchedule(Day)","url":"reportDisplayDaySchedule(agile.planner.manager.day.Day)"},{"p":"agile.planner.util","c":"EventLog","l":"reportDisplaySchedule(int, int, boolean)","url":"reportDisplaySchedule(int,int,boolean)"},{"p":"agile.planner.util","c":"EventLog","l":"reportException(Exception)","url":"reportException(java.lang.Exception)"},{"p":"agile.planner.util","c":"EventLog","l":"reportExitSession()"},{"p":"agile.planner.util","c":"EventLog","l":"reportProcessTasks(String)","url":"reportProcessTasks(java.lang.String)"},{"p":"agile.planner.util","c":"EventLog","l":"reportSchedulingFinish()"},{"p":"agile.planner.util","c":"EventLog","l":"reportSchedulingStart()"},{"p":"agile.planner.util","c":"EventLog","l":"reportTaskAction(Task, int)","url":"reportTaskAction(agile.planner.task.Task,int)"},{"p":"agile.planner.util","c":"EventLog","l":"reportUserLogin()"},{"p":"agile.planner.util","c":"EventLog","l":"reportWeekEdit(Calendar, int, boolean)","url":"reportWeekEdit(java.util.Calendar,int,boolean)"},{"p":"agile.planner.task","c":"Task","l":"reset()"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"scheduleIsEmpty()"},{"p":"agile.planner.util","c":"GoogleUtil","l":"sendData()"},{"p":"agile.planner.task","c":"Task","l":"setAverageNumHours(Calendar)","url":"setAverageNumHours(java.util.Calendar)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"setCustomHours(int, int)","url":"setCustomHours(int,int)"},{"p":"agile.planner.manager","c":"ScheduleManager","l":"setGlobalHours(int, int)","url":"setGlobalHours(int,int)"},{"p":"agile.planner.task","c":"Task","l":"Task(int, String, int, int)","url":"%3Cinit%3E(int,java.lang.String,int,int)"},{"p":"agile.planner.util","c":"Time","l":"Time()","url":"%3Cinit%3E()"},{"p":"agile.planner.manager.day","c":"Day","l":"toString()"},{"p":"agile.planner.task","c":"Task","l":"toString()"},{"p":"agile.planner.task","c":"Task.SubTask","l":"toString()"},{"p":"agile.planner.user","c":"User","l":"User()","url":"%3Cinit%3E()"},{"p":"agile.planner.user.config","c":"UserConfig","l":"UserConfig()","url":"%3Cinit%3E()"},{"p":"agile.planner.io","c":"IOProcessing","l":"writeDay(Day, int, PrintStream)","url":"writeDay(agile.planner.manager.day.Day,int,java.io.PrintStream)"},{"p":"agile.planner.io","c":"IOProcessing","l":"writeSchedule(List<Day>, int, PrintStream)","url":"writeSchedule(java.util.List,int,java.io.PrintStream)"}]